#!/bin/bash

###########################################################
# Installer for edulutionUI
# V1.0
# by lukas.spitznagel@netzint.de
###########################################################

DIRECTORY="/srv/docker/edulution-ui/"
EDULUTION_INSTALLER_TAG="main"
INSTALLER_DOMAIN=""

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --dev)
            echo "Entwicklermodus aktiviert! Es werden Test-Pakete verwendet!"
            read -p "Möchtest du wirklich fortfahren? [j/N] " confirm
            if [[ ! "$confirm" =~ ^[Jj]$ ]]; then
                echo "Abgebrochen!"
                exit 1
            fi
            EDULUTION_INSTALLER_TAG="dev"
            shift
            ;;
        --ssl)
            echo "Entwicklermodus aktiviert! Es werden Test-Pakete verwendet!"
            read -p "Möchtest du wirklich fortfahren? [j/N] " confirm
            if [[ ! "$confirm" =~ ^[Jj]$ ]]; then
                echo "Abgebrochen!"
                exit 1
            fi
            EDULUTION_INSTALLER_TAG="ssl"
            shift
            ;;
        --domain=*)
            INSTALLER_DOMAIN="${1#*=}"
            echo "Domain gesetzt: $INSTALLER_DOMAIN"
            shift
            ;;
        --domain)
            INSTALLER_DOMAIN="$2"
            echo "Domain gesetzt: $INSTALLER_DOMAIN"
            shift 2
            ;;
        *)
            echo "Unbekannter Parameter: $1"
            echo "Verwendung: $0 [--dev] [--ssl] [--domain=example.com] [--domain example.com]"
            exit 1
            ;;
    esac
done

clear

cat <<EOF
           _       _       _   _             _   _ ___ 
   ___  __| |_   _| |_   _| |_(_) ___  _ __ | | | |_ _|
  / _ \/ _\` | | | | | | | | __| |/ _ \| '_ \| | | || | 
 |  __/ (_| | |_| | | |_| | |_| | (_) | | | | |_| || | 
  \___|\__,_|\__,_|_|\__,_|\__|_|\___/|_| |_|\___/|___|
                                                       
                edulutionUI - Installer

EOF

if [ "$EUID" -ne 0 ]; then
  echo "[!] Bitte führen Sie das Skript mit Root-Rechten aus."
  exit 1
fi

cpu_flags=$(grep -m1 'flags' /proc/cpuinfo | cut -d: -f2)
if ! (echo "$cpu_flags" | grep -qwE 'cx16' && \
      echo "$cpu_flags" | grep -qwE 'lahf_lm' && \
      echo "$cpu_flags" | grep -qwE 'popcnt' && \
      echo "$cpu_flags" | grep -qwE 'sse4_1' && \
      echo "$cpu_flags" | grep -qwE 'sse4_2' && \
      echo "$cpu_flags" | grep -qwE 'ssse3'); then
    echo "[!] Die CPU unterstützt kein x86-64-v2. Bitte überprüfe die CPU Einstellungen deiner VM!"
    exit 1
fi

if [ -f "${DIRECTORY}edulution.env" ]; then
  echo "[!] Die edulutionUI scheint bereits installiert zu sein. Bitte prüfe das Verzeichnis '$DIRECTORY'!"
  exit 1
fi

if ! command -v docker &> /dev/null; then
    echo "[*] Docker ist nicht installiert. Installation wird gestartet..."

    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
        VERSION=$VERSION_ID
    else
        echo "[!] Betriebssystem konnte nicht ermittelt werden."
        exit 1
    fi

    if [ "$OS" == "ubuntu" ] && ([[ "$VERSION" == "22.04" ]] || [[ "$VERSION" == "24.04" ]]); then

        apt-get update

        apt-get install -y \
            ca-certificates \
            curl \
            gnupg \
            lsb-release

        install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
            gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        chmod a+r /etc/apt/keyrings/docker.gpg

        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

        apt-get update

        apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

        systemctl enable docker --now

        echo "[*] Docker wurde erfolgreich installiert."

    else
        echo "[!] Dieses Skript unterstützt nur Ubuntu 22.04 und 24.04."
        exit 1
    fi
else
    echo "[*] Docker ist bereits installiert."
fi

if ! command -v jq &> /dev/null; then
    echo "[*] JQ ist nicht installiert. Installation wird gestartet..."
    apt-get update
    apt-get install -y jq
fi

echo "[*] Erstelle Ordner für die edulutionUI installation..."
mkdir -p $DIRECTORY
cd $DIRECTORY

for file in docker-compose.yml realm-edulution.json traefik.yml edulution-default.yml; do

    echo "[*] Herunterladen der Datei $file..."
    curl -s -o ${DIRECTORY}${file} https://get.edulution.io/download/${file}.template

    if [ ! -f "${DIRECTORY}${file}" ]; then
        echo "[!] Datei '$file' konnte nicht heruntergeladen werden!"
        exit 1
    fi

done

echo "[*] Anpassung der Proxy-Konfiguration..."

mkdir -p ${DIRECTORY}data/traefik/config
mkdir -p ${DIRECTORY}data/traefik/ssl
mkdir -p ${DIRECTORY}data/public/downloads
mkdir -p ${DIRECTORY}data/apps
mkdir -p ${DIRECTORY}data/apps/desktopdeployment/edulution-guacamole/config

chmod -R 777 ${DIRECTORY}data

mv ${DIRECTORY}edulution-default.yml ${DIRECTORY}data/traefik/config

echo "[*] Starte den edulutionUI Web-Installer..."

docker pull ghcr.io/edulution-io/edulution-installer:${EDULUTION_INSTALLER_TAG} 2>&1 > /dev/zero

cat <<EOF

########################################################

    edulutionUI Web-Installer
      
    Sie erreichen die Oberfläche wie folgt:
      
    https://$(hostname):443
    https://$(hostname -I | awk '{print $1}'):443

########################################################

EOF

# Docker run mit optionalem Domain-Parameter
if [ -n "$INSTALLER_DOMAIN" ]; then
    echo "Starte Installer mit Domain: $INSTALLER_DOMAIN"
    docker run -it --name edulution-installer -p 80:8080 -p 443:8000 -v ${DIRECTORY}:/edulution-ui/ -v /var/run/docker.sock:/var/run/docker.sock \
        -e EDULUTION_DIRECTORY=${DIRECTORY} \
        -e INSTALLER_DOMAIN=${INSTALLER_DOMAIN} \
        ghcr.io/edulution-io/edulution-installer:${EDULUTION_INSTALLER_TAG} 2>&1 > /dev/zero
else
    docker run -it --name edulution-installer -p 443:8000 -v ${DIRECTORY}:/edulution-ui/ -v /var/run/docker.sock:/var/run/docker.sock \
        -e EDULUTION_DIRECTORY=${DIRECTORY} ghcr.io/edulution-io/edulution-installer:${EDULUTION_INSTALLER_TAG} 2>&1 > /dev/zero
fi
docker rm edulution-installer 2>&1 > /dev/zero

echo "[*] Starte den Authentifizierungserver um die Einstellungen festzulegen..."

docker network create edulution-prepare 2>&1 > /dev/zero

docker pull postgres:16 2>&1 > /dev/zero
docker pull quay.io/keycloak/keycloak:25.0 2>&1 > /dev/zero

docker run -d \
  --name edulution-keycloak-db \
  --restart always \
  --env-file ${DIRECTORY}edulution.env \
  -e POSTGRES_DB=keycloak \
  -v ${DIRECTORY}data/keycloak/db:/var/lib/postgresql/data \
  --network edulution-prepare \
  postgres:16 2>&1 > /dev/zero

docker run -d \
  --name edulution-keycloak \
  --restart always \
  --env-file ${DIRECTORY}edulution.env \
  -v ${DIRECTORY}realm-edulution.json:/opt/keycloak/data/import/realm-edulution.json \
  -e KC_DB_URL=jdbc:postgresql://edulution-keycloak-db/keycloak \
  -e KC_DB=postgres \
  -e KC_DB_URL_DATABASE=keycloak \
  -e KC_DB_SCHEMA=public \
  -e KC_PROXY=edge \
  -e KC_HOSTNAME_STRICT=false \
  -e KC_HOSTNAME_STRICT_HTTPS=false \
  -e KC_HTTP_RELATIVE_PATH=/auth \
  -p 8080:8080 \
  --network edulution-prepare \
  quay.io/keycloak/keycloak:25.0 \
  start-dev \
  --import-realm 2>&1 > /dev/zero

attempt=0
until $(curl --output /dev/null --silent --get --fail "http://localhost:8080/auth/realms/master"); do
    attempt=$((attempt+1))
  
    if [ $attempt -ge 60 ]; then
        echo "[!] Es konnte kein Verbindung zum Authentifizierungserver hergestellt werden!"
        exit 1
    fi

    echo "[*] Warten bis der Authentifizierungserver gestartet ist (Versuch ${attempt} / 60)"
    sleep 3
done

source ${DIRECTORY}edulution.env

AUTH_TOKEN=$(curl -s --request POST 'http://localhost:8080/auth/realms/master/protocol/openid-connect/token' \
                --header 'Content-Type: application/x-www-form-urlencoded' \
                --data-urlencode "username=${KEYCLOAK_ADMIN}" \
                --data-urlencode "password=${KEYCLOAK_ADMIN_PASSWORD}" \
                --data-urlencode 'grant_type=password' \
                --data-urlencode 'client_id=admin-cli' | jq '.access_token' | sed 's/\"//g')

if [ -z "${AUTH_TOKEN}" ]; then
    echo "[!] Es konnte kein Verbindung zum Authentifizierungserver hergestellt werden!"
    exit 1
fi

KEYCLOAK_PUBLIC_KEY=$(curl -s --request GET 'http://localhost:8080/auth/admin/realms/edulution/keys' \
                        --header "Authorization: Bearer ${AUTH_TOKEN}" \
                        --header 'Content-Type: application/json' | jq '.keys[] | select(.algorithm == "RS256") | .publicKey' | sed 's/\"//g')

KEYCLOAK_CERTIFICATE_KEY=$(curl -s --request GET 'http://localhost:8080/auth/admin/realms/edulution/keys' \
                        --header "Authorization: Bearer ${AUTH_TOKEN}" \
                        --header 'Content-Type: application/json' | jq '.keys[] | select(.algorithm == "RS256") | .certificate' | sed 's/\"//g')

if [[ -z "${KEYCLOAK_PUBLIC_KEY}" && -z "${KEYCLOAK_CERTIFICATE_KEY}" ]]; then
    echo "[!] Die Authentifizierungsschlüssel konnten nicht abgerufen werden!"
    exit 1
fi

cat <<EOF > ${DIRECTORY}data/edulution.pem
-----BEGIN CERTIFICATE-----
${KEYCLOAK_CERTIFICATE_KEY}
-----END CERTIFICATE-----

-----BEGIN PRIVATE KEY-----
${KEYCLOAK_PUBLIC_KEY}
-----END PRIVATE KEY-----
EOF

docker stop edulution-keycloak 2>&1 > /dev/zero
docker stop edulution-keycloak-db 2>&1 > /dev/zero
docker rm edulution-keycloak 2>&1 > /dev/zero
docker rm edulution-keycloak-db 2>&1 > /dev/zero
docker network rm edulution-prepare 2>&1 > /dev/zero

rm ${DIRECTORY}realm-edulution.json

echo "[*] Arbeiten am Authentifizierungserver abgeschlossen."

echo "[*] Herunterladen der edulutionUI Container..."
docker compose --project-directory ${DIRECTORY} pull 2>&1 > /dev/zero

echo "[*] Konfiguration abgeschlossen. Starte edulutionUI!"

docker compose --project-directory ${DIRECTORY} up -d 2>&1 > /dev/zero

if [ -z "$EDULUTION_BASE_DOMAIN" ]; then
    EDULUTION_BASE_DOMAIN=$(hostname)
fi

cat <<EOF

########################################################

   ____ _ _   _      _                                   _     _ 
  / ___| (_) (_) ___| | ____      ___   _ _ __  ___  ___| |__ | |
 | |  _| | | | |/ __| |/ /\ \ /\ / / | | | '_ \/ __|/ __| '_ \| |
 | |_| | | |_| | (__|   <  \ V  V /| |_| | | | \__ \ (__| | | |_|
  \____|_|\__,_|\___|_|\_\  \_/\_/  \__,_|_| |_|___/\___|_| |_(_)
                                                                 
    Die Installation der edulutionUI ist abgeschlossen!

    Sie erreichen die Oberfläche wie folgt:
      
    https://$EDULUTION_BASE_DOMAIN                                                            

########################################################

EOF